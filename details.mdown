# TODO

- make computer smarter, 2/3 go for win, modularize ai()
- repeat sequence
- if computer can win, it should. hence, module ai()
- if both player and computer have 1/3, computer should opt for the best option.

# USER STORY

1. Player clicks a tile. If empty add X to that tile using add_to_html
	
	i. remove that id from board_copy, to keep track of available moves.
	
	ii. add that board to X/O moves history

	iii. check if player has won


2. The computer moves directly after the user makes a legal move, using compute_move().
	
	i. computer_move() calls ai(), which checks if the player has a potential wining move. If it does, prevent it from winning. Otherwise, make a random move.

	ii. check if computer has won


3. Repeat


### Problems
- computer stops moving after x moves. SOLVED
	Had to add the condition: 
	$('#'+make_move).is(":empty")

- enabling random start creates the above problem



# Other

- is there a way to mathematically create available combinations without having to explicitly state them?
- Is there any way to test this?